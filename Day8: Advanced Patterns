// Java Program to print pattern
// Square hollow pattern
import java.util.*;

public class GeeksForGeeks {
	// Function to demonstrate pattern
	public static void printPattern(int n)
	{
		int i, j;
		// outer loop to handle number of rows
		for (i = 0; i < n; i++) {
			// inner loop to handle number of columns
			for (j = 0; j < n; j++) {
				// star will print only when it is in first
				// row or last row or first column or last
				// column
				if (i == 0 || j == 0 || i == n - 1
					|| j == n - 1) {
					System.out.print("*");
				}
				// otherwise print space only.
				else {
					System.out.print(" ");
				}
			}
			System.out.println();
		}
	}

	// Driver Function
	public static void main(String args[])
	{
		int n = 6;
		printPattern(n);
	}
}



// Java Program to print pattern
// Number triangle pattern
import java.util.*;

public class GeeksForGeeks {
	// Function to demonstrate pattern
	public static void printPattern(int n)
	{
		int i, j;
		// outer loop to handle number of rows
		for (i = 1; i <= n; i++) {
			// inner loop to print space
			for (j = 1; j <= n - i; j++) {
				System.out.print(" ");
			}
			// inner loop to print star
			for (j = 1; j <= i; j++) {
				System.out.print(i + " ");
			}
			// print new line for each row
			System.out.println();
		}
	}

	// Driver Function
	public static void main(String args[])
	{
		int n = 6;
		printPattern(n);
	}
}



// Java Program to print pattern
// Number-increasing pyramid 
import java.util.*;

public class GeeksForGeeks {
	// Function to demonstrate pattern
	public static void printPattern(int n)
	{
		int i, j;
		// outer loop to handle number of rows
		for (i = 1; i <= n; i++) {
			// inner loop to handle number of columns
			for (j = 1; j <= i; j++) {
				// printing column values upto the row
				// value.
				System.out.print(j + " ");
			}

			// print new line for each row
			System.out.println();
		}
	}

	// Driver Function
	public static void main(String args[])
	{
		int n = 6;
		printPattern(n);
	}
}


// Java Program to print pattern
// Number-increasing reverse pyramid
import java.util.*;

public class GeeksForGeeks {
	// Function to demonstrate pattern
	public static void printPattern(int n)
	{
		int i, j;
		// outer loop to handle number of rows
		for (i = n; i >= 1; i--) {
			// inner loop to handle number of columns
			for (j = 1; j <= i; j++) {
				// printing column values upto the row
				// value.
				System.out.print(j + " ");
			}

			// print new line for each row
			System.out.println();
		}
	}

	// Driver Function
	public static void main(String args[])
	{
		int n = 6;
		printPattern(n);
	}
}

