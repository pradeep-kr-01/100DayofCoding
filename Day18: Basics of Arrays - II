//Largest Number

public class array{

    public static int getLargest(int numbers[]){
        int largest = Integer.MIN_VALUE;
        for(int i=0; i<numbers.length; i++){
            if(largest<numbers[i]){
                largest=numbers[i];
            }
        }
        return largest;
    }
    public static void main(String[] args) {
        int numbers[]={67,77,56,34,23,45,67,88,99,23,44};
        int Largest=getLargest(numbers);
        System.out.println("The Largest number of the array is " + Largest);
        
    }
}

//Smallest Number

public class array{

    public static int getSmallest(int numbers[]){
        int smallest = Integer.MAX_VALUE;
        for(int i=0; i<numbers.length; i++){
            if(smallest>numbers[i]){
                smallest=numbers[i];
            }
        }
        return smallest;
    }
    public static void main(String[] args) {
        int numbers[]={67,77,56,34,23,45,67,88,99,23,44};
        int Smallest=getSmallest(numbers);
        System.out.println("The Smallest number of the array is " + Smallest);
        
    }
}

//Binary Search

public class array{

    public static int binarySearch(int numbers[], int key){
        int start=0, end=numbers.length - 1 ;
        while(start<=end){
            int mid = (start + end)/2 ;
            if (numbers[mid]==key){
                return mid;
            }
            if (numbers[mid]<key){
                start=mid+1;
            }else{
                end=mid-1;
            }

        } 
        return -1;
    }
    public static void main(String[] args) {
        int numbers[]={1,2,3,4,5,6,7,8,9};
        int key = 5;

        int index = binarySearch(numbers, key);

        System.out.println("The number is at index " + index);

    }
}

// Reverse of an Array

public class array{

    public static void reverse(int numbers[]){

        int first=0, last=numbers.length-1;
        while(first<=last){
            int temp=numbers[last];
            numbers[last]=numbers[first];
            numbers[first]=temp;

            first++;
            last--;

        }
        
    }

    public static void main(String[] args) {
        int numbers[]={45,67,33,66};
        reverse(numbers);
        for(int i=0; i<numbers.length; i++){
            System.out.print(numbers[i] + " ");

        }
        

    }
}

//Pairs in Array

public class array{

    public static void pairs(int numbers[]){

        int tp=0;

        for(int i=0; i<numbers.length; i++){
            int curr=numbers[i];
            for(int j=i+1; j<numbers.length; j++){
                System.out.print("("+ numbers[i]+","+numbers[j]+")");
                tp++;


            }
            System.out.println();
        }
        System.out.println("Total pairs " + tp);
    }

    public static void main(String[] args) {
        int numbers[]={1,3,4,6,7};
        pairs(numbers);
    }
}

//Printing Subarrays

public class array{

    public static void subarray(int numbers[]){
        int ts=0;
        for(int i=0; i<numbers.length; i++){
            int start=i;
            for(int j=i; j<numbers.length; j++){
                int end=j;
                for (int k=start; k<=end; k++){
                    System.out.print(numbers[k]+"");
                }
                ts++;
                System.out.println();
            }
            System.out.println();
        }
        System.out.println("Total Subarray"+ts);
    }
    public static void main(String[] args) {
        int numbers[]={1,2,3,4,5,6};
        subarray(numbers);
    }
}
